// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace AspNetMvc.Migrations
{
    [DbContext(typeof(AnagraficaContext))]
    [Migration("20181103145643_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("Models.Tabelle.Anagrafica", b =>
                {
                    b.Property<int>("AnagraficaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodiceAnagrafica");

                    b.Property<string>("CodiceFiscale");

                    b.Property<string>("Cognome");

                    b.Property<bool>("IsAzienda");

                    b.Property<string>("Nome");

                    b.Property<string>("PartitaIva");

                    b.Property<string>("RagioneSociale");

                    b.Property<int>("TipoAnagraficaId");

                    b.HasKey("AnagraficaId");

                    b.HasIndex("TipoAnagraficaId");

                    b.ToTable("Anagrafica");
                });

            modelBuilder.Entity("Models.Tabelle.Contatti", b =>
                {
                    b.Property<int>("ContattiId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AnagraficaId");

                    b.Property<string>("Note");

                    b.Property<int>("TipoContattoId");

                    b.Property<string>("Valore");

                    b.HasKey("ContattiId");

                    b.HasIndex("AnagraficaId");

                    b.HasIndex("TipoContattoId");

                    b.ToTable("Contatti");
                });

            modelBuilder.Entity("Models.Tabelle.Indirizzi", b =>
                {
                    b.Property<int>("IndirizziId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AnagraficaId");

                    b.Property<string>("Cap");

                    b.Property<string>("Citta");

                    b.Property<string>("Denominazione");

                    b.Property<string>("Nazione");

                    b.Property<string>("Numero");

                    b.Property<string>("Provincia");

                    b.Property<string>("Regione");

                    b.Property<int>("TipoIndirizzoId");

                    b.HasKey("IndirizziId");

                    b.HasIndex("AnagraficaId");

                    b.HasIndex("TipoIndirizzoId");

                    b.ToTable("Indirizzi");
                });

            modelBuilder.Entity("Models.Tabelle.TipoAnagrafica", b =>
                {
                    b.Property<int>("TipoAnagraficaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descrizione");

                    b.HasKey("TipoAnagraficaId");

                    b.ToTable("TipoAnagrafica");
                });

            modelBuilder.Entity("Models.Tabelle.TipoContatto", b =>
                {
                    b.Property<int>("TipoContattoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descrizione");

                    b.HasKey("TipoContattoId");

                    b.ToTable("TipoContatto");
                });

            modelBuilder.Entity("Models.Tabelle.TipoIndirizzo", b =>
                {
                    b.Property<int>("TipoIndirizzoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descrizione");

                    b.HasKey("TipoIndirizzoId");

                    b.ToTable("TipoIndirizzo");
                });

            modelBuilder.Entity("Models.Tabelle.Anagrafica", b =>
                {
                    b.HasOne("Models.Tabelle.TipoAnagrafica", "TipoAnagrafica")
                        .WithMany()
                        .HasForeignKey("TipoAnagraficaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Models.Tabelle.Contatti", b =>
                {
                    b.HasOne("Models.Tabelle.Anagrafica", "Anagrafica")
                        .WithMany("Contatti")
                        .HasForeignKey("AnagraficaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Models.Tabelle.TipoContatto", "TipoContatto")
                        .WithMany()
                        .HasForeignKey("TipoContattoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Models.Tabelle.Indirizzi", b =>
                {
                    b.HasOne("Models.Tabelle.Anagrafica", "Anagrafica")
                        .WithMany("Indirizzi")
                        .HasForeignKey("AnagraficaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Models.Tabelle.TipoIndirizzo", "TipoIndirizzo")
                        .WithMany()
                        .HasForeignKey("TipoIndirizzoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
